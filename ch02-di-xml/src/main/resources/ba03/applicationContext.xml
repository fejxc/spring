<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--声明Student对象-->

<!--    使用name属性实现构造注入 （推荐,可读性高）     -->
    <bean id="myStudent" class="com.sunyun.ba03.Student">
      <constructor-arg name="myname" value="张三"/>
        <constructor-arg name="myage" value="53"/>
        <constructor-arg name="myschool" ref="myxuexiao"/>
    </bean>

<!--    声明school对象 （声明对象不用关系顺序） -->
    <bean id="myxuexiao" class="com.sunyun.ba03.School">
        <property name="name" value="井冈山大学(电信学院）"></property>
        <property name="address" value="江西省吉安市青原区学院路28号"></property>
    </bean>


<!--    创建File，使用构造注入       -->
    <bean id="myfile" class="java.io.File">
        <constructor-arg name="parent" value="/desktop"/>
        <constructor-arg name="child" value="1.创建库表.txt"/>

    </bean>
<!--    使用index属性实现构造注入      -->
    <bean id="myStudent2" class="com.sunyun.ba03.Student">
        <constructor-arg index="1" value="33"/>
        <constructor-arg index="0" value="lisi"/>
        <constructor-arg index="2" ref="myxuexiao"/>
<!--        0，1，2顺序可以随便     -->
<!--                省略index构造注入
        <constructor-arg  value="lisi"/>
        <constructor-arg  value="33"/>
        <constructor-arg  ref="myxuexiao"/>
-->
    </bean>



<!--    给属性赋值
简单类型：spring中规定java中的基本数据类型和String都是简单类型
set注入（设值注入的意思）：spring调用set方法，你可以在set方法中完成属性赋值
1）di：给属性赋值
简单set注入:
<bean id="xx" class="xx">
    <property name="属性名字" value="属性的值" />
    一个property只能给一个属性赋值
    <property .....>
</bean>
2）引用类型的set注入：spring
调用类的set方法
    <bean id="xx" class="xx">
    <property name="属性名字" ref="bean的id（对象的名称）" />
    一个property只能给一个属性赋值
    <property .....>
</bean>

3)构造注入：spring调用有参数的构造方法，在创建对象的同时，在构造方法中给属性赋值
    构造注入 <constructor-arg>标签：一个<constructor-arg> 表示一个构造方法的参数
    <constructor-arg>标签属性：
        name：表示构造方法的形参名
        index：表示构造方法参数的位置，左往右，0，1，2......
        value：如果构造方法的形参数类型是简单类型，用value
        ref：如果构造方法的形参数类型是引用类型，用ref


   -->

</beans>